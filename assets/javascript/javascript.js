// Declare global variables for letters, numbers, and special characters
var letters = 'abcdefghijklmnopqrstuvwxyz';
var numbers = '0123456789';
var special = '!#$%&()*+,-./:;<=>?@^_`{|}~';
var passwordLength;
/*
Function to validate whether or not a password should be generated by checking
the addition of all form values. If all values add up to a number between 8 and 128
then a password can be generated. The event is monitored to determine if a modal
should be displayed notifying the user of an insufficient password length or
to empty the password and not generate if using form values. 
*/
function passwordValidation(e) {
    // Declaring local variables to get values from the HTML forms. 
    var myDataNodes = document.querySelectorAll('[data-bind]');
    var lowercaseNumber = myDataNodes[0].valueAsNumber;
    var uppercaseNumber = myDataNodes[1].valueAsNumber;
    var numberNumber = myDataNodes[2].valueAsNumber;
    var specialNumber = myDataNodes[3].valueAsNumber;
    passwordLength = (lowercaseNumber + uppercaseNumber + numberNumber + specialNumber);
    // Check if the number is invalid, displaying a modal if the generate password button is clicked. 
    if ((passwordLength > 128 || passwordLength < 8) && e.type === 'click') {
        document.querySelector("#currentLength").innerHTML = `Your current password length is ${passwordLength}.`;
        // $('#exampleModal').modal("show");
        document.querySelector("#generated-password").innerHTML = "Password must be between 8 and 128 characters";
        document.querySelector("#copy-confirm").style.display = "none";
        document.querySelector("#copy-message").style.display = "none";
    }
    // Check if the password is invalid, clearing previously generated passwords using form inputs.
    else if ((passwordLength > 128 || passwordLength < 8) && e.type === 'input') {
        // $('#exampleModal').modal("show");
        document.querySelector("#generated-password").innerHTML = "Password must be between 8 and 128 characters";
        document.querySelector("#copy-confirm").style.display = "none";
        document.querySelector("#copy-message").style.display = "none";
    }
    // Check if the password is invalid (not a number), clearing previously generated passwords using form inputs.
    else if (isNaN(passwordLength)==true) {
        document.querySelector("#generated-password").innerHTML = "Please enter values for each password criteria";
        document.querySelector("#copy-confirm").style.display = "none";
        document.querySelector("#copy-message").style.display = "none";
    }
    // The password is valid, and is now generated.
    else {
        generatePassword(lowercaseNumber, uppercaseNumber, numberNumber, specialNumber)
        document.querySelector("#copy-message").style.display = "block";
    }
}
/*
Helper function that takes in a string and
returns a random element from the string. 
*/
function getRandom(string) {
    var randIndex = Math.floor(Math.random() * string.length);
    var randElement = string[randIndex];

    return randElement;
}
/*
Helper function that takes in a string and 
returns a randomized verion of the string.
*/
function shuffleString(string) {
    var newString = string.split('');
    newString.sort(() => Math.random() - 0.5);
    return newString.join("");
}
/*
Function that generates a password based on the number of lowercase, uppercase,
numbers, and special characters supplied by the user in the HTML form inputs. 
A valid, randomlized password is then written to the DOM.
*/
function generatePassword(passwordLowercase, passwordUppercase, passwordNumbers, passwordSpecial) {
    // Declared local variable that will be the eventual random password.
    var thePassword = "";
    // Get a build a string with random characters from each necessary component.
    for (var i = 0; i < passwordLowercase; i++) {
        thePassword += getRandom(letters);
    }
    for (var i = 0; i < passwordUppercase; i++) {
        thePassword += getRandom(letters.toUpperCase());
    }
    for (var i = 0; i < passwordNumbers; i++) {
        thePassword += getRandom(numbers);
    }
    for (var i = 0; i < passwordSpecial; i++) {
        thePassword += getRandom(special);
    }
    // Shuffle the password and write it to the DOM.
    document.querySelector("#generated-password").innerHTML = shuffleString(thePassword);
}
function copyToClipboard() {
    if (passwordLength >= 8 && passwordLength <= 128) {
        /* Get the text field */
        var copyText = document.getElementById("generated-password");
        /* Select the text field */
        copyText.select();
        copyText.setSelectionRange(0, 99999); /*For mobile devices*/
        /* Copy the text inside the text field */
        document.execCommand("copy");
        /* Alert the copied text */
        document.querySelector("#copy-confirm").style.display = "block";
        /* Remove message after three seconds */
        setTimeout(function () { document.querySelector("#copy-confirm").style.display = "none"; }, 3000);
        window.location.href = '#copy-confirm';
    }
    else {
        document.querySelector("#copy-confirm").style.display = "none";
    }
}
// Create an event listener for each form input so a password
// can be generated dymanically on input.
var myInputNodes = document.querySelectorAll('.my-input');
myInputNodes.forEach(myInputNode => {
    addEventListener("input", function (e) {
        passwordValidation(e);
    })
});
document.querySelector('#generated-password').addEventListener("click", copyToClipboard);

